-- ========================================
-- –°–¢–í–û–†–ï–ù–ù–Ø –¢–ê–ë–õ–ò–¶–Ü –î–û–ö–£–ú–ï–ù–¢–Ü–í
-- –í–∏–∫–æ–Ω–∞–π—Ç–µ –≤ Supabase Dashboard -> SQL Editor
-- ========================================

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
CREATE TABLE IF NOT EXISTS public.documents (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
    car_id UUID REFERENCES public.cars(id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    type TEXT NOT NULL, -- 'insurance', 'registration', 'service', 'receipt', 'other'
    file_url TEXT NOT NULL,
    file_size INTEGER,
    mime_type TEXT,
    expiry_date DATE,
    description TEXT,
    is_scanned BOOLEAN DEFAULT FALSE,
    ocr_text TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è RLS (Row Level Security)
ALTER TABLE public.documents ENABLE ROW LEVEL SECURITY;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–ª—ñ—Ç–∏–∫ –±–µ–∑–ø–µ–∫–∏
CREATE POLICY "Users can view their own documents"
    ON public.documents FOR SELECT
    USING (auth.uid() = user_id);

CREATE POLICY "Users can insert their own documents"
    ON public.documents FOR INSERT
    WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own documents"
    ON public.documents FOR UPDATE
    USING (auth.uid() = user_id);

CREATE POLICY "Users can delete their own documents"
    ON public.documents FOR DELETE
    USING (auth.uid() = user_id);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–∏–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
CREATE TRIGGER handle_documents_updated_at
    BEFORE UPDATE ON public.documents
    FOR EACH ROW
    EXECUTE FUNCTION public.handle_updated_at();

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤ –¥–ª—è —à–≤–∏–¥–∫–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
CREATE INDEX documents_user_id_idx ON public.documents(user_id);
CREATE INDEX documents_car_id_idx ON public.documents(car_id);
CREATE INDEX documents_type_idx ON public.documents(type);
CREATE INDEX documents_expiry_date_idx ON public.documents(expiry_date);

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
CREATE OR REPLACE FUNCTION public.create_document(
    p_car_id UUID,
    p_name TEXT,
    p_type TEXT,
    p_file_url TEXT,
    p_file_size INTEGER DEFAULT NULL,
    p_mime_type TEXT DEFAULT NULL,
    p_expiry_date DATE DEFAULT NULL,
    p_description TEXT DEFAULT NULL,
    p_is_scanned BOOLEAN DEFAULT FALSE,
    p_ocr_text TEXT DEFAULT NULL
) RETURNS UUID AS $$
DECLARE
    v_document_id UUID;
BEGIN
    INSERT INTO public.documents (
        user_id,
        car_id,
        name,
        type,
        file_url,
        file_size,
        mime_type,
        expiry_date,
        description,
        is_scanned,
        ocr_text
    ) VALUES (
        auth.uid(),
        p_car_id,
        p_name,
        p_type,
        p_file_url,
        p_file_size,
        p_mime_type,
        p_expiry_date,
        p_description,
        p_is_scanned,
        p_ocr_text
    ) RETURNING id INTO v_document_id;

    RETURN v_document_id;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤, —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —è–∫–∏—Ö –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è
CREATE OR REPLACE FUNCTION public.check_expiring_documents()
RETURNS TABLE (
    document_id UUID,
    car_id UUID,
    document_name TEXT,
    expiry_date DATE,
    days_until_expiry INTEGER
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        d.id,
        d.car_id,
        d.name,
        d.expiry_date,
        EXTRACT(DAY FROM d.expiry_date - CURRENT_DATE)::INTEGER as days_until_expiry
    FROM public.documents d
    WHERE d.user_id = auth.uid()
    AND d.expiry_date IS NOT NULL
    AND d.expiry_date BETWEEN CURRENT_DATE AND CURRENT_DATE + INTERVAL '30 days'
    ORDER BY d.expiry_date ASC;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –ø—Ä–æ –¥–æ–∫—É–º–µ–Ω—Ç–∏, —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —è–∫–∏—Ö –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è
CREATE OR REPLACE FUNCTION public.create_document_expiry_notifications()
RETURNS void AS $$
DECLARE
    expiring_doc RECORD;
BEGIN
    -- –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–∫—É–º–µ–Ω—Ç–∏, —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —è–∫–∏—Ö –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º 7 –¥–Ω—ñ–≤
    FOR expiring_doc IN
        SELECT * FROM public.check_expiring_documents()
        WHERE days_until_expiry <= 7
    LOOP
        -- –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –¥–æ–∫—É–º–µ–Ω—Ç, —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —è–∫–æ–≥–æ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è
        PERFORM public.create_notification(
            auth.uid(),
            'document',
            '–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è: ' || expiring_doc.document_name,
            '–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å–ø–ª–∏–≤–∞—î —á–µ—Ä–µ–∑ ' || expiring_doc.days_until_expiry || ' –¥–Ω—ñ–≤',
            expiring_doc.car_id
        );
    END LOOP;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
DO $$
BEGIN
    RAISE NOTICE '‚úÖ –¢–∞–±–ª–∏—Ü—é –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!';
    RAISE NOTICE 'üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∫–ª—é—á–∞—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–æ–ª—è –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤';
    RAISE NOTICE 'üîí RLS –ø–æ–ª—ñ—Ç–∏–∫–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –¥–ª—è –±–µ–∑–ø–µ–∫–∏ –¥–∞–Ω–∏—Ö';
    RAISE NOTICE '‚ö° –Ü–Ω–¥–µ–∫—Å–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ';
    RAISE NOTICE 'üìÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –¥–æ–∫—É–º–µ–Ω—Ç–∏, —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —è–∫–∏—Ö –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è';
END $$;
