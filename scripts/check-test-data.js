const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL || 'https://kjnbhiyrxtdaohxssynx.supabase.co';
const supabaseKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;

const supabase = createClient(supabaseUrl, supabaseKey);

console.log('üîç –ü–ï–†–ï–í–Ü–†–ö–ê –¢–ï–°–¢–û–í–ò–• –î–ê–ù–ò–•\n');

async function checkData() {
  try {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ
    console.log('1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤...');
    const { data: cars, error: carsError } = await supabase
      .from('cars')
      .select('*');

    if (carsError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', carsError.message);
    } else {
      console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤: ${cars.length}`);
      if (cars.length > 0) {
        cars.forEach(car => {
          console.log(`   - ${car.brand} ${car.model} ${car.year} (${car.status})`);
        });
      }
    }
    console.log('');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∏—Ç—Ä–∞—Ç–∏
    console.log('2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏—Ç—Ä–∞—Ç...');
    const { data: expenses, error: expensesError } = await supabase
      .from('car_expenses')
      .select('*');

    if (expensesError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', expensesError.message);
    } else {
      console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –≤–∏—Ç—Ä–∞—Ç: ${expenses.length}`);
      if (expenses.length > 0) {
        const total = expenses.reduce((sum, exp) => sum + parseFloat(exp.amount), 0);
        console.log(`   üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: $${total.toFixed(2)}`);
        
        const byCategory = expenses.reduce((acc, exp) => {
          acc[exp.category] = (acc[exp.category] || 0) + parseFloat(exp.amount);
          return acc;
        }, {});
        
        Object.entries(byCategory).forEach(([category, amount]) => {
          console.log(`   - ${category}: $${amount.toFixed(2)}`);
        });
      }
    }
    console.log('');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–æ–±—ñ–≥
    console.log('3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å—Ç–æ—Ä—ñ—ó –ø—Ä–æ–±—ñ–≥—É...');
    const { data: mileage, error: mileageError } = await supabase
      .from('mileage_history')
      .select('*')
      .order('date', { ascending: false });

    if (mileageError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', mileageError.message);
    } else {
      console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å—ñ–≤: ${mileage.length}`);
    }
    console.log('');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–∫—É–º–µ–Ω—Ç–∏
    console.log('4Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤...');
    const { data: documents, error: docsError } = await supabase
      .from('car_documents')
      .select('*');

    if (docsError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', docsError.message);
    } else {
      console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤: ${documents.length}`);
    }
    console.log('');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ–∫—É–ø—Ü—ñ–≤
    console.log('5Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–∫—É–ø—Ü—ñ–≤...');
    const { data: buyers, error: buyersError } = await supabase
      .from('buyers')
      .select('*');

    if (buyersError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', buyersError.message);
    } else {
      console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ–∫—É–ø—Ü—ñ–≤: ${buyers.length}`);
      if (buyers.length > 0) {
        buyers.forEach(buyer => {
          console.log(`   - ${buyer.name} (${buyer.phone})`);
        });
      }
    }
    console.log('');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    console.log('6Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ø–æ–≤—ñ—â–µ–Ω—å...');
    const { data: notifications, error: notifError } = await supabase
      .from('notifications')
      .select('*');

    if (notifError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', notifError.message);
    } else {
      console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Å–ø–æ–≤—ñ—â–µ–Ω—å: ${notifications.length}`);
      const unread = notifications.filter(n => !n.is_read).length;
      console.log(`   üì¨ –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–∏—Ö: ${unread}`);
    }
    console.log('');

    // –ü—ñ–¥—Å—É–º–æ–∫
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('üìä –ü–Ü–î–°–£–ú–û–ö:');
    console.log(`   üöó –ê–≤—Ç–æ–º–æ–±—ñ–ª—ñ: ${cars?.length || 0}`);
    console.log(`   üí∞ –í–∏—Ç—Ä–∞—Ç–∏: ${expenses?.length || 0}`);
    console.log(`   üìè –Ü—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ–±—ñ–≥—É: ${mileage?.length || 0}`);
    console.log(`   üìÑ –î–æ–∫—É–º–µ–Ω—Ç–∏: ${documents?.length || 0}`);
    console.log(`   üë• –ü–æ–∫—É–ø—Ü—ñ: ${buyers?.length || 0}`);
    console.log(`   üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: ${notifications?.length || 0}\n`);

    if (cars?.length > 0) {
      console.log('‚úÖ –î–ê–ù–Ü –£–°–ü–Ü–®–ù–û –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–û –ó –ë–î!');
      console.log('üéØ –¢–µ–ø–µ—Ä –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ó—Ö –≤ –¥–æ–¥–∞—Ç–∫—É');
    } else {
      console.log('‚ö†Ô∏è  –î–ê–ù–ò–• –ù–ï –ó–ù–ê–ô–î–ï–ù–û');
      console.log('üí° –î–æ–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ —á–µ—Ä–µ–∑ Supabase Dashboard');
      console.log('üìù –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: scripts/TEST_DATA_README.md');
    }

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
  }
}

checkData();
