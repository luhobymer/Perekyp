const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL || 'https://kjnbhiyrxtdaohxssynx.supabase.co';
const supabaseKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtqbmJoaXlyeHRkYW9oeHNzeW54Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzODA2MTUsImV4cCI6MjA1OTk1NjYxNX0.x7nrtynaPcDWCOffcWJNrZkhTXNPokvTZ9NtpnFJ9FY';

const supabase = createClient(supabaseUrl, supabaseKey);

console.log('üöÄ –î–û–î–ê–í–ê–ù–ù–Ø –¢–ï–°–¢–û–í–ò–• –î–ê–ù–ò–•\n');
console.log('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: luhobymer@gmail.com\n');

async function addTestData() {
  try {
    // 1. –û—Ç—Ä–∏–º—É—î–º–æ user_id
    console.log('1Ô∏è‚É£ –ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');
    const { data: userData, error: userError } = await supabase.auth.admin.listUsers();
    
    if (userError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', userError.message);
      console.log('\n‚ö†Ô∏è  –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ Supabase Dashboard');
      return;
    }

    const user = userData.users.find(u => u.email === 'luhobymer@gmail.com');
    
    if (!user) {
      console.error('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á luhobymer@gmail.com –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π');
      console.log('üí° –°–ø–æ—á–∞—Ç–∫—É –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –¥–æ–¥–∞—Ç–æ–∫');
      return;
    }

    const userId = user.id;
    console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–Ω–∞–π–¥–µ–Ω–∏–π:', userId, '\n');

    // 2. –î–æ–¥–∞—î–º–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ
    console.log('2Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤...');
    const cars = [
      {
        user_id: userId,
        brand: 'Toyota',
        model: 'Camry',
        year: 2019,
        vin: 'JTNBF46K803123456',
        reg_number: 'AA1234BB',
        body_type: 'sedan',
        engine_type: 'petrol',
        engine_volume: '2.5',
        transmission: 'automatic',
        color: 'silver',
        mileage: 85000,
        purchase_price: 15000,
        status: 'active',
        notes: '–ö—É–ø–ª–µ–Ω–æ –Ω–∞ –∞—É–∫—Ü—ñ–æ–Ω—ñ, –≤ —Ö–æ—Ä–æ—à–æ–º—É —Å—Ç–∞–Ω—ñ'
      },
      {
        user_id: userId,
        brand: 'BMW',
        model: 'X5',
        year: 2018,
        vin: 'WBAJB8C55JG876543',
        reg_number: 'BC5678DE',
        body_type: 'suv',
        engine_type: 'diesel',
        engine_volume: '3.0',
        transmission: 'automatic',
        color: 'black',
        mileage: 120000,
        purchase_price: 25000,
        status: 'repairing',
        notes: '–ü–æ—Ç—Ä–µ–±—É—î —Ä–µ–º–æ–Ω—Ç—É –ø—ñ–¥–≤—ñ—Å–∫–∏'
      },
      {
        user_id: userId,
        brand: 'Volkswagen',
        model: 'Golf',
        year: 2020,
        vin: 'WVWZZZ1KZLW234567',
        reg_number: 'EF9012GH',
        body_type: 'hatchback',
        engine_type: 'petrol',
        engine_volume: '1.4',
        transmission: 'manual',
        color: 'white',
        mileage: 45000,
        purchase_price: 12000,
        status: 'sold',
        notes: '–ü—Ä–æ–¥–∞–Ω–æ —á–µ—Ä–µ–∑ 2 –º—ñ—Å—è—Ü—ñ'
      }
    ];

    const { data: carsData, error: carsError } = await supabase
      .from('cars')
      .insert(cars)
      .select();

    if (carsError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤:', carsError.message);
      return;
    }

    console.log(`‚úÖ –î–æ–¥–∞–Ω–æ ${carsData.length} –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ\n`);

    // 3. –î–æ–¥–∞—î–º–æ –≤–∏—Ç—Ä–∞—Ç–∏
    console.log('3Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç...');
    const expenses = [
      {
        user_id: userId,
        car_id: carsData[0].id,
        category: 'purchase',
        amount: 15000,
        description: '–ö—É–ø—ñ–≤–ª—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è –Ω–∞ –∞—É–∫—Ü—ñ–æ–Ω—ñ',
        date: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[0].id,
        category: 'repair',
        amount: 450,
        description: '–ó–∞–º—ñ–Ω–∞ –≥–∞–ª—å–º—ñ–≤–Ω–∏—Ö –∫–æ–ª–æ–¥–æ–∫',
        date: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[0].id,
        category: 'fuel',
        amount: 80,
        description: '–ó–∞–ø—Ä–∞–≤–∫–∞ 40–ª',
        date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[1].id,
        category: 'purchase',
        amount: 25000,
        description: '–ö—É–ø—ñ–≤–ª—è BMW X5 –∑ –ø—Ä–æ–±—ñ–≥–æ–º',
        date: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[1].id,
        category: 'parts',
        amount: 1200,
        description: '–ó–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–ª—è –ø—ñ–¥–≤—ñ—Å–∫–∏',
        date: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[1].id,
        category: 'repair',
        amount: 800,
        description: '–†–µ–º–æ–Ω—Ç –ø—ñ–¥–≤—ñ—Å–∫–∏',
        date: new Date(Date.now() - 21 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[2].id,
        category: 'purchase',
        amount: 12000,
        description: '–ö—É–ø—ñ–≤–ª—è Volkswagen Golf',
        date: new Date(Date.now() - 120 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[2].id,
        category: 'repair',
        amount: 300,
        description: '–ó–∞–º—ñ–Ω–∞ –º–∞—Å–ª–∞ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤',
        date: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()
      }
    ];

    const { data: expensesData, error: expensesError } = await supabase
      .from('car_expenses')
      .insert(expenses)
      .select();

    if (expensesError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç:', expensesError.message);
    } else {
      console.log(`‚úÖ –î–æ–¥–∞–Ω–æ ${expensesData.length} –≤–∏—Ç—Ä–∞—Ç\n`);
    }

    // 4. –î–æ–¥–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –ø—Ä–æ–±—ñ–≥—É
    console.log('4Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –ø—Ä–æ–±—ñ–≥—É...');
    const mileageHistory = [
      {
        user_id: userId,
        car_id: carsData[0].id,
        mileage: 82000,
        date: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[0].id,
        mileage: 84000,
        date: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[0].id,
        mileage: 85000,
        date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[1].id,
        mileage: 118000,
        date: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString()
      },
      {
        user_id: userId,
        car_id: carsData[1].id,
        mileage: 120000,
        date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()
      }
    ];

    const { data: mileageData, error: mileageError } = await supabase
      .from('mileage_history')
      .insert(mileageHistory)
      .select();

    if (mileageError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ–±—ñ–≥—É:', mileageError.message);
    } else {
      console.log(`‚úÖ –î–æ–¥–∞–Ω–æ ${mileageData.length} –∑–∞–ø–∏—Å—ñ–≤ –ø—Ä–æ–±—ñ–≥—É\n`);
    }

    // 5. –î–æ–¥–∞—î–º–æ –ø–æ–∫—É–ø—Ü—ñ–≤
    console.log('5Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–∫—É–ø—Ü—ñ–≤...');
    const buyers = [
      {
        user_id: userId,
        name: '–Ü–≤–∞–Ω–æ–≤ –Ü–≤–∞–Ω –Ü–≤–∞–Ω–æ–≤–∏—á',
        phone: '+380501234567',
        email: 'ivanov@example.com',
        notes: '–ó–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω–∏–π –≤ Toyota Camry'
      },
      {
        user_id: userId,
        name: '–ü–µ—Ç—Ä–µ–Ω–∫–æ –ü–µ—Ç—Ä–æ',
        phone: '+380671234567',
        email: 'petrenko@example.com',
        notes: '–ö—É–ø–∏–≤ VW Golf'
      },
      {
        user_id: userId,
        name: '–°–∏–¥–æ—Ä–æ–≤–∞ –û–ª–µ–Ω–∞',
        phone: '+380931234567',
        notes: '–ü–∏—Ç–∞–ª–∞ –ø—Ä–æ BMW X5'
      }
    ];

    const { data: buyersData, error: buyersError } = await supabase
      .from('buyers')
      .insert(buyers)
      .select();

    if (buyersError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–∫—É–ø—Ü—ñ–≤:', buyersError.message);
    } else {
      console.log(`‚úÖ –î–æ–¥–∞–Ω–æ ${buyersData.length} –ø–æ–∫—É–ø—Ü—ñ–≤\n`);
    }

    // 6. –î–æ–¥–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    console.log('6Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å...');
    const notifications = [
      {
        user_id: userId,
        title: '–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è',
        message: '–Ü–≤–∞–Ω–æ–≤ –Ü–≤–∞–Ω —Ü—ñ–∫–∞–≤–∏—Ç—å—Å—è –≤–∞—à–∏–º Toyota Camry',
        type: 'info',
        is_read: false
      },
      {
        user_id: userId,
        title: '–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è',
        message: '–ß–µ—Ä–µ–∑ –º—ñ—Å—è—Ü—å –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –Ω–∞ Toyota Camry',
        type: 'warning',
        is_read: false
      },
      {
        user_id: userId,
        title: '–£—Å–ø—ñ—à–Ω–æ',
        message: '–ê–≤—Ç–æ–º–æ–±—ñ–ª—å VW Golf –ø—Ä–æ–¥–∞–Ω–æ',
        type: 'success',
        is_read: true
      }
    ];

    const { data: notificationsData, error: notificationsError } = await supabase
      .from('notifications')
      .insert(notifications)
      .select();

    if (notificationsError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å:', notificationsError.message);
    } else {
      console.log(`‚úÖ –î–æ–¥–∞–Ω–æ ${notificationsData.length} —Å–ø–æ–≤—ñ—â–µ–Ω—å\n`);
    }

    // –ü—ñ–¥—Å—É–º–æ–∫
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('‚úÖ –¢–ï–°–¢–û–í–Ü –î–ê–ù–Ü –£–°–ü–Ü–®–ù–û –î–û–î–ê–ù–û!\n');
    console.log('üìä –ü—ñ–¥—Å—É–º–æ–∫:');
    console.log(`   üöó –ê–≤—Ç–æ–º–æ–±—ñ–ª—ñ: ${carsData.length}`);
    console.log(`   üí∞ –í–∏—Ç—Ä–∞—Ç–∏: ${expensesData?.length || 0}`);
    console.log(`   üìè –ü—Ä–æ–±—ñ–≥: ${mileageData?.length || 0}`);
    console.log(`   üë• –ü–æ–∫—É–ø—Ü—ñ: ${buyersData?.length || 0}`);
    console.log(`   üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: ${notificationsData?.length || 0}\n`);
    console.log('üéØ –¢–µ–ø–µ—Ä —É–≤—ñ–π–¥—ñ—Ç—å –≤ –¥–æ–¥–∞—Ç–æ–∫ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ!');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error.message);
  }
}

addTestData();
