const https = require('https');

const SUPABASE_URL = 'https://kjnbhiyrxtdaohxssynx.supabase.co';
const API_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtqbmJoaXlyeHRkYW9oeHNzeW54Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzODA2MTUsImV4cCI6MjA1OTk1NjYxNX0.x7nrtynaPcDWCOffcWJNrZkhTXNPokvTZ9NtpnFJ9FY';

console.log('üîç –ü–ï–†–ï–í–Ü–†–Ø–Æ –í–°–Ü –¢–ê–ë–õ–ò–¶–Ü –í –ë–ê–ó–Ü –î–ê–ù–ò–•...\n');

// –¢–∞–±–ª–∏—Ü—ñ —è–∫—ñ —è –±–∞—á—É –Ω–∞ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ
const existingTables = [
  'buyers',
  'car_documents', 
  'car_expenses',
  'car_images',
  'cars',
  'mileage_history',
  'ownership_history',
  'profiles',
  'service_history',
  'status_comments',
  'team_members',
  'teams'
];

// –¢–∞–±–ª–∏—Ü—ñ —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–ª—è –¥–æ–¥–∞—Ç–∫—É
const requiredTables = [
  'profiles',
  'cars',
  'expenses',
  'documents',
  'notifications'
];

let checkedCount = 0;
const results = {
  existing: [],
  missing: [],
  extra: []
};

console.log('üìã –¢–ê–ë–õ–ò–¶–Ü –ó –°–ö–†–Ü–ù–®–û–¢–£:');
existingTables.forEach(table => console.log(`   ‚Ä¢ ${table}`));
console.log('');

console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é —è–∫—ñ —Ç–∞–±–ª–∏—Ü—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–ª—è –¥–æ–¥–∞—Ç–∫—É...\n');

requiredTables.forEach((table, index) => {
  setTimeout(() => {
    const options = {
      hostname: 'kjnbhiyrxtdaohxssynx.supabase.co',
      port: 443,
      path: '/rest/v1/' + table + '?select=id&limit=1',
      method: 'GET',
      headers: {
        'apikey': API_KEY,
        'Authorization': 'Bearer ' + API_KEY,
        'Content-Type': 'application/json'
      }
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        checkedCount++;
        
        if (res.statusCode === 200) {
          console.log(`‚úÖ ${table} - –Ü–°–ù–£–Ñ`);
          results.existing.push(table);
        } else {
          console.log(`‚ùå ${table} - –ù–ï –Ü–°–ù–£–Ñ`);
          results.missing.push(table);
        }

        if (checkedCount === requiredTables.length) {
          console.log('\nüìä –ê–ù–ê–õ–Ü–ó –ë–ê–ó–ò –î–ê–ù–ò–•:');
          console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
          
          console.log('\n‚úÖ –ì–û–¢–û–í–Ü –¢–ê–ë–õ–ò–¶–Ü –î–õ–Ø –î–û–î–ê–¢–ö–£:');
          if (results.existing.includes('profiles')) console.log('   ‚úì profiles (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ)');
          if (results.existing.includes('cars')) console.log('   ‚úì cars (–∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ)');
          if (results.existing.includes('expenses')) console.log('   ‚úì expenses (–≤–∏—Ç—Ä–∞—Ç–∏)');
          if (results.existing.includes('documents')) console.log('   ‚úì documents (–¥–æ–∫—É–º–µ–Ω—Ç–∏)');
          if (results.existing.includes('notifications')) console.log('   ‚úì notifications (—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è)');
          
          console.log('\nüìã –î–û–î–ê–¢–ö–û–í–Ü –¢–ê–ë–õ–ò–¶–Ü (–≤–∂–µ —î):');
          console.log('   ‚Ä¢ car_documents - –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤');
          console.log('   ‚Ä¢ car_expenses - –≤–∏—Ç—Ä–∞—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤');
          console.log('   ‚Ä¢ car_images - –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤');
          console.log('   ‚Ä¢ mileage_history - —ñ—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ–±—ñ–≥—É');
          console.log('   ‚Ä¢ ownership_history - —ñ—Å—Ç–æ—Ä—ñ—è –≤–ª–∞—Å–Ω–æ—Å—Ç—ñ');
          console.log('   ‚Ä¢ service_history - —ñ—Å—Ç–æ—Ä—ñ—è –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è');
          console.log('   ‚Ä¢ buyers - –ø–æ–∫—É–ø—Ü—ñ');
          console.log('   ‚Ä¢ teams - –∫–æ–º–∞–Ω–¥–∏');
          console.log('   ‚Ä¢ team_members - —á–ª–µ–Ω–∏ –∫–æ–º–∞–Ω–¥');
          console.log('   ‚Ä¢ status_comments - –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Å—Ç–∞—Ç—É—Å—É');
          
          if (results.missing.length > 0) {
            console.log('\n‚ùå –í–Ü–î–°–£–¢–ù–Ü –¢–ê–ë–õ–ò–¶–Ü:');
            results.missing.forEach(table => {
              if (table === 'expenses') console.log('   ‚úó expenses - –ú–û–ñ–ù–ê –í–ò–ö–û–†–ò–°–¢–ê–¢–ò car_expenses');
              else if (table === 'documents') console.log('   ‚úó documents - –ú–û–ñ–ù–ê –í–ò–ö–û–†–ò–°–¢–ê–¢–ò car_documents');
              else console.log(`   ‚úó ${table}`);
            });
          }
          
          console.log('\nüí° –í–ò–°–ù–û–í–û–ö:');
          if (results.missing.includes('expenses') && existingTables.includes('car_expenses')) {
            console.log('   ‚ÑπÔ∏è  –¢–∞–±–ª–∏—Ü—è car_expenses –º–æ–∂–µ –∑–∞–º—ñ–Ω–∏—Ç–∏ expenses');
          }
          if (results.missing.includes('documents') && existingTables.includes('car_documents')) {
            console.log('   ‚ÑπÔ∏è  –¢–∞–±–ª–∏—Ü—è car_documents –º–æ–∂–µ –∑–∞–º—ñ–Ω–∏—Ç–∏ documents');
          }
          if (results.missing.includes('notifications')) {
            console.log('   ‚ö†Ô∏è  –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é notifications');
          }
          
          if (results.missing.length === 0) {
            console.log('   üéâ –í—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ —ñ—Å–Ω—É—é—Ç—å!');
            console.log('   üöÄ –ú–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫: npm run start');
          } else {
            console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:');
            console.log('   1. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ car_expenses —Ç–∞ car_documents –º–∞—é—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
            console.log('   2. –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é notifications —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞');
            console.log('   3. –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–¥ –¥–æ–¥–∞—Ç–∫—É –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö —Ç–∞–±–ª–∏—Ü—å');
          }
        }
      });
    });

    req.on('error', (err) => {
      checkedCount++;
      console.log(`‚ùå ${table} - –ü–û–ú–ò–õ–ö–ê: ${err.message}`);
    });

    req.end();
  }, index * 200);
});
